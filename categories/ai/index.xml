<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>AI on qftang-全栈技术博客</title>
        <link>https://qingfeitang.github.io/full-stack-blog/categories/ai/</link>
        <description>Recent content in AI on qftang-全栈技术博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>云视角科技有限公司</copyright>
        <lastBuildDate>Wed, 13 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://qingfeitang.github.io/full-stack-blog/categories/ai/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>跨时空的难样本挖掘</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/%E8%B7%A8%E6%97%B6%E7%A9%BA%E7%9A%84%E9%9A%BE%E6%A0%B7%E6%9C%AC%E6%8C%96%E6%8E%98/</link>
        <pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/%E8%B7%A8%E6%97%B6%E7%A9%BA%E7%9A%84%E9%9A%BE%E6%A0%B7%E6%9C%AC%E6%8C%96%E6%8E%98/</guid>
        <description>

&lt;object
    data=&#34;./xbm-20210713.pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./xbm-20210713.pdf&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;

</description>
        </item>
        <item>
        <title>基于Python实现的T-SNE(T-分布随机邻嵌入)算法</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/%E5%9F%BA%E4%BA%8Epython%E5%AE%9E%E7%8E%B0%E7%9A%84t-snet-%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BA%E9%82%BB%E5%B5%8C%E5%85%A5%E7%AE%97%E6%B3%95/</link>
        <pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/%E5%9F%BA%E4%BA%8Epython%E5%AE%9E%E7%8E%B0%E7%9A%84t-snet-%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BA%E9%82%BB%E5%B5%8C%E5%85%A5%E7%AE%97%E6%B3%95/</guid>
        <description>&lt;img src="https://qingfeitang.github.io/full-stack-blog/p/%E5%9F%BA%E4%BA%8Epython%E5%AE%9E%E7%8E%B0%E7%9A%84t-snet-%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BA%E9%82%BB%E5%B5%8C%E5%85%A5%E7%AE%97%E6%B3%95/shortcut.jpg" alt="Featured image of post 基于Python实现的T-SNE(T-分布随机邻嵌入)算法" /&gt;&lt;p&gt;tsne(t-分布随机邻嵌入)是基于Python实现的降维算法，用于高维数据的可视化技术，将高维数据映射到低维空间（通常是二维或三维）以便于观察。&lt;br&gt;
本文将对tsne代码进行讲解，获取源码请点击：&lt;a class=&#34;link&#34; href=&#34;https://github.com/qingfeitang/tsne.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/qingfeitang/tsne.git&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;功能&#34;&gt;功能
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;降维&lt;/strong&gt;：将高维特征向量数据降维为二维，通过散点图进行可视化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输入数据处理&lt;/strong&gt;：加载特征文件和目标文件，运行t-SNE后保存结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可视化&lt;/strong&gt;：根据目标类别（targets）对降维后的点着色并保存图片。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;函数解析&#34;&gt;函数解析
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Hbeta(D, beta)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;计算基于高斯分布的熵（H）和条件概率向量（P）。&lt;/li&gt;
&lt;li&gt;输入距离矩阵的一行（D）以及β（高斯分布的精度），返回与某一指定精度的概率分布和熵。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过高斯核计算相邻点的条件概率分布：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;P = np.exp(-D.copy() * beta)
H = np.log(sumP) + beta * np.sum(D * P) / sumP
P = P / sumP
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;code&gt;x2p(X, tol, perplexity)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;通过二分搜索优化每个点的高斯核宽度，使其满足指定的困惑度（perplexity）。&lt;/li&gt;
&lt;li&gt;生成数据点之间的条件概率矩阵P。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算欧式距离的平方：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D = np.add(np.add(-2 * np.dot(X, X.T), sum_X).T, sum_X)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根据误差动态调整高斯分布的宽度：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;while np.abs(Hdiff) &amp;gt; tol and tries &amp;lt; 50:
    if Hdiff &amp;gt; 0:  # 如果熵大于目标值，调整β值
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;code&gt;pca(X, no_dims)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;对输入数据X进行PCA（主成分分析），降维至指定维度。&lt;/li&gt;
&lt;li&gt;t-SNE可以选用PCA作为数据的初步降维步骤。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过协方差矩阵特征分解提取主成分:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(l, M) = np.linalg.eig(np.dot(X.T, X))
Y = np.dot(X, M[:, 0:no_dims])
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;code&gt;tsne(X, no_dims, initial_dims, perplexity)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;实现t-SNE算法，将输入数据降维至低维。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算高维空间的条件概率矩阵：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;P = x2p(X, 1e-5, perplexity)
P = P + np.transpose(P)
P = P / np.sum(P)
P = P * 4. 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;基于梯度下降更新坐标，使低纬度分布与高维分布接近：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for iter in range(max_iter):
    num = 1. / (1. + np.add(np.add(-2. * np.dot(Y, Y.T), sum_Y).T, sum_Y))
    Q = num / np.sum(num)
    PQ = P - Q
    dY[i, :] = ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;实践分析&#34;&gt;实践分析
&lt;/h3&gt;&lt;p&gt;基于火灾数据集我们训练了3个分类模型，并在2000条测试集上面通过tsne算法做了可视化展示，效果如下：&lt;br&gt;
&lt;img src=&#34;https://qingfeitang.github.io/full-stack-blog/full-stack-blog/p/%E5%9F%BA%E4%BA%8Epython%E5%AE%9E%E7%8E%B0%E7%9A%84t-snet-%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BA%E9%82%BB%E5%B5%8C%E5%85%A5%E7%AE%97%E6%B3%95/shortcut2.jpg&#34;
	width=&#34;1466&#34;
	height=&#34;743&#34;
	srcset=&#34;https://qingfeitang.github.io/full-stack-blog/full-stack-blog/p/%E5%9F%BA%E4%BA%8Epython%E5%AE%9E%E7%8E%B0%E7%9A%84t-snet-%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BA%E9%82%BB%E5%B5%8C%E5%85%A5%E7%AE%97%E6%B3%95/shortcut2_hu2207856159236137155.jpg 480w, https://qingfeitang.github.io/full-stack-blog/full-stack-blog/p/%E5%9F%BA%E4%BA%8Epython%E5%AE%9E%E7%8E%B0%E7%9A%84t-snet-%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BA%E9%82%BB%E5%B5%8C%E5%85%A5%E7%AE%97%E6%B3%95/shortcut2_hu4078315072322567694.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;tsne可视化效果图&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;197&#34;
		data-flex-basis=&#34;473px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从图中可以看出，模型能够有效区分正样本和负样本，且正负样本之间的间隔（margin）较大，这表明模型在类别区分性方面表现较好。&lt;/li&gt;
&lt;li&gt;根据可视化结果定位到误报的图像，可以看出干扰数据主要是夜间的灯光，进而对模型重点迭代优化此类数据即可。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>SPOS-单路径神经架构搜索</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/spos-%E5%8D%95%E8%B7%AF%E5%BE%84%E7%A5%9E%E7%BB%8F%E6%9E%B6%E6%9E%84%E6%90%9C%E7%B4%A2/</link>
        <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/spos-%E5%8D%95%E8%B7%AF%E5%BE%84%E7%A5%9E%E7%BB%8F%E6%9E%B6%E6%9E%84%E6%90%9C%E7%B4%A2/</guid>
        <description>

&lt;object
    data=&#34;./SPOS-20220402.pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./SPOS-20220402.pdf&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;

</description>
        </item>
        <item>
        <title>Faiss-大规模向量相似性搜索库</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/faiss-%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%90%91%E9%87%8F%E7%9B%B8%E4%BC%BC%E6%80%A7%E6%90%9C%E7%B4%A2%E5%BA%93/</link>
        <pubDate>Sat, 13 Nov 2021 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/faiss-%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%90%91%E9%87%8F%E7%9B%B8%E4%BC%BC%E6%80%A7%E6%90%9C%E7%B4%A2%E5%BA%93/</guid>
        <description>&lt;p&gt;Faiss是由Facebook AI Research团队开发的一个库，旨在高效地进行大规模向量相似性搜索。它不仅支持CPU，还能利用GPU进行加速，非常适合处理大量高维数据。Faiss提供了多种索引类型，以适应不同的需求，从简单的平面索引（Flat Index）到更复杂的倒排文件索引（IVF）和乘积量化索引（PQ）。&lt;br&gt;


&lt;object
    data=&#34;./faiss-20211113.pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./faiss-20211113.pdf&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>kmeans算法生成匹配自定义数据集的anchor</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/kmeans%E7%AE%97%E6%B3%95%E7%94%9F%E6%88%90%E5%8C%B9%E9%85%8D%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84anchor/</link>
        <pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/kmeans%E7%AE%97%E6%B3%95%E7%94%9F%E6%88%90%E5%8C%B9%E9%85%8D%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E9%9B%86%E7%9A%84anchor/</guid>
        <description>&lt;p&gt;源码请查阅 &lt;a class=&#34;link&#34; href=&#34;https://github.com/qingfeitang/kmeans-for-anchors.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;kmeans-for-anchors&lt;/a&gt;&lt;/p&gt;


&lt;object
    data=&#34;./kmeans_for_anchors-20211017.pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./kmeans_for_anchors-20211017.pdf&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;

</description>
        </item>
        <item>
        <title>DINO-一种用于自监督视觉学习的深度学习模型</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/dino-%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8E%E8%87%AA%E7%9B%91%E7%9D%A3%E8%A7%86%E8%A7%89%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/</link>
        <pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/dino-%E4%B8%80%E7%A7%8D%E7%94%A8%E4%BA%8E%E8%87%AA%E7%9B%91%E7%9D%A3%E8%A7%86%E8%A7%89%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A8%A1%E5%9E%8B/</guid>
        <description>&lt;p&gt;DINO 是一种用于自监督视觉学习的深度学习模型，于 2021 年由 Facebook AI 提出。DINO 是最先探讨基于 Transformer 架构的自监督学习代表作之一，其通过在无标签图像上进行自监督训练来学习视觉特征表示。&lt;br&gt;


&lt;object
    data=&#34;./DINO.pdf#view=Fit&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./DINO.pdf#view=Fit&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>可变形卷积</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/%E5%8F%AF%E5%8F%98%E5%BD%A2%E5%8D%B7%E7%A7%AF/</link>
        <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/%E5%8F%AF%E5%8F%98%E5%BD%A2%E5%8D%B7%E7%A7%AF/</guid>
        <description>

&lt;object
    data=&#34;./deconv-20210814.pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./deconv-20210814.pdf&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;

</description>
        </item>
        <item>
        <title>模型轻量化</title>
        <link>https://qingfeitang.github.io/full-stack-blog/p/%E6%A8%A1%E5%9E%8B%E8%BD%BB%E9%87%8F%E5%8C%96/</link>
        <pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate>
        
        <guid>https://qingfeitang.github.io/full-stack-blog/p/%E6%A8%A1%E5%9E%8B%E8%BD%BB%E9%87%8F%E5%8C%96/</guid>
        <description>

&lt;object
    data=&#34;./%e6%a8%a1%e5%9e%8b%e5%8e%8b%e7%bc%a9%e4%b8%8e%e5%89%aa%e6%9e%9d-20210717.pdf&#34; width=&#34;100%&#34; height=&#34;600px&#34;type=&#34;application/pdf&#34;
&gt;
    &lt;p&gt;Unable to display PDF file. &lt;a href=&#34;./%e6%a8%a1%e5%9e%8b%e5%8e%8b%e7%bc%a9%e4%b8%8e%e5%89%aa%e6%9e%9d-20210717.pdf&#34;&gt;Download&lt;/a&gt; instead.&lt;/p&gt;
&lt;/object&gt;

</description>
        </item>
        
    </channel>
</rss>
